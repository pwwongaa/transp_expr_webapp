
// src/pages/Result.jsx
import axios from 'axios';
import { useEffect, useState } from 'react';

const DownloadIcon = () => (
    <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path></svg>
);

export default function Result() {
  const [files, setFiles] = useState([]);
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(true);

  // The output plots catching
  const titleMap = {
    umap: "ðŸ§  UMAP Embedding",
    heatmap: "ðŸ”¥ Heatmap of DEGs",
    volcano: "ðŸŒ‹ Volcano Plot"
  };
  
  const getTitle = (name) => {
    for (const key in titleMap) {
      if (name.toLowerCase().includes(key)) return titleMap[key];
    }
    return name.replace(/_/g, ' ').replace(/\.png$/, '');
  };

  const sortFiles = (fileList) => {
    const order = Object.keys(titleMap);
    return [...fileList].sort((a, b) => {
      const aIndex = order.findIndex(key => a.toLowerCase().includes(key));
      const bIndex = order.findIndex(key => b.toLowerCase().includes(key));
      return (aIndex === -1 ? 99 : aIndex) - (bIndex === -1 ? 99 : bIndex);
    });
  };

  useEffect(() => {
    setLoading(true);
    axios.get('http://localhost:8000/result-files')
      .then(res => {
        setFiles(sortFiles(res.data));
      })
      .catch(err => {
        setError(err.message || "Could not fetch results.");
      })
      .finally(() => {
        setLoading(false);
      });
  }, []);

  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center text-center py-20">
          <div className="w-12 h-12 border-4 border-sky-500 border-solid border-t-transparent rounded-full animate-spin"></div>
          <p className="text-slate-500 mt-4">Loading results...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="text-center py-10 px-4 bg-red-100 border border-red-400 text-red-700 rounded-lg">
        <h2 className="text-2xl font-bold mb-2">Error Loading Results</h2>
        <p>{error}</p>
      </div>
    );
  }
  
  if (!files.length) {
    return (
      <div className="text-center py-10 px-4 bg-amber-100 border border-amber-400 text-amber-700 rounded-lg">
        <h2 className="text-2xl font-bold mb-2">No Results Found</h2>
        <p>The analysis completed, but no result files were generated.</p>
      </div>
    );
  }

  // return (
  //   <div className="space-y-12">
  //     <div className="text-center">
  //       <h2 className="text-4xl font-extrabold text-slate-900">Analysis Results</h2>
  //       <p className="mt-2 text-lg text-slate-600">Explore the visualizations generated by the pipeline.</p>
  //     </div>

  //     <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
  //       {files.map((name) => (
  //         <div key={name} className="bg-white rounded-2xl shadow-xl overflow-hidden transform hover:-translate-y-2 transition-transform duration-300">
  //           <div className="p-6">
  //             <h3 className="text-xl font-bold text-slate-800 mb-4">{getTitle(name)}</h3>
  //             <div className="bg-slate-100 p-2 sm:p-4 rounded-lg">
  //               <img
  //                 src={`http://localhost:8000/results/${name}`}
  //                 alt={getTitle(name)}
  //                 className="w-full h-auto object-contain rounded-md shadow-inner"
  //                 loading="lazy"
  //               />
  //             </div>
  //             <div className="mt-6 text-center">
  //               <a
  //                 href={`http://localhost:8000/results/${name}`}
  //                 download={name}
  //                 className="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-sky-700 bg-sky-100 hover:bg-sky-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500 transition"
  //               >
  //                 <DownloadIcon />
  //                 Download Image
  //               </a>
  //             </div>
  //           </div>
  //         </div>
  //       ))}
  //     </div>
  //   </div>
  // );

  return (
  <main className="min-h-screen w-full bg-gray-900 py-8">
      {/* Page Title */}
      <div className="max-w-6x1 mx-auto text-center mb-12">
        <h2 className="text-4xl font-extrabold text-white">
          Analysis Results
        </h2>
        <p className="mt-2 text-lg text-gray-300">
          Explore the visualizations generated by the pipeline.
        </p>
      </div>

      {/* Card Network */}
      {/* Loop the result table form FastAPI FE */}
      {/* scrolling region: vertical sep: each grid/cell y-sep=8,  */}
      <div className="flex flex-col space-y-8">
        {files.map((name) => (
          // White grids/cells
          <div
            key={name}
            className="flex justify-center bg-white rounded-2xl shadow-xl overflow-hidden 
                       transform hover:-translate-y-2 transition-transform duration-300"
          >
            {/* Same content */}
            <div className="p-6">
              <h3 className="text-xl font-bold text-gray-800 mb-4">
                {getTitle(name)}
              </h3>
              <div className="bg-gray-100 p-4 rounded-lg">
                <img
                  src={`http://localhost:8000/results/${name}`}
                  alt={getTitle(name)}
                  className="w-full h-auto object-contain rounded-md shadow-inner"
                  loading="lazy"
                />
              </div>
              <div className="mt-6 flex justify-center">
                <a
                  href={`http://localhost:8000/results/${name}`} //obtain the pic
                  download={name}
                  target="_blank" //open to a new page
                  rel="noopener noreferrer" //network browsing privacy
                  className="inline-flex items-center justify-center
                             px-4 py-2 border border-transparent
                             text-sm font-medium rounded-md
                             text-sky-700 bg-sky-100 hover:bg-sky-200
                             focus:outline-none focus:ring-2
                             focus:ring-offset-2 focus:ring-sky-500
                             transition mx-auto"
                >
                  ðŸ”— Open in New Tab
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>
    </main>
  );
}
